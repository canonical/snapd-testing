#!/bin/bash

set -x

JOB_CONFIG=$1
JIRA_CONFIG=$2

CURR_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
PROJECT_DIR="$(dirname $CURR_DIR)"

echo "Checking input files"
if [ ! -f "$CURR_DIR"/config/jira/"${JIRA_CONFIG}" ]; then
    echo "Jira file does not exist: $JIRA_CONFIG"
    exit 1
fi

if [ ! -f "$CURR_DIR"/config/jobs/"${JOB_CONFIG}".sh ]; then
    echo "configuration file does not exist, exiting"
    exit 1
fi

echo "Checking dependencies"
if ! "$CURR_DIR"/tools/check-env; then
    echo "Error checking dependencies, please run "$CURR_DIR"/tools/create-env script"
    exit 1
fi

echo "Loading job config: $CURR_DIR/config/jobs/$JOB_CONFIG.sh"
"$CURR_DIR"/config/jobs/"${JOB_CONFIG}".sh
"$CURR_DIR"/config/jobs/common.sh

echo "Running tests"
"$CURR_DIR"/tests/run-tests.sh

echo "Analyzing results and exis status"
# Determining the exit status for the run
# In case there are successful tasks it means the execution finished and there is at least 1 test executed successfully
if grep -e "Successful tasks:" "$SPREAD_LOG"; then
    # For edge cahnnel, a successful run is when all the tests have pass
    if [ "$CHANNEL" = edge ]; then
        if grep -e "Failed task" "$SPREAD_LOG" && ! grep -e "Aborted tasks: 0" "$SPREAD_LOG"; then
            echo "Execution finished and either not spread results included in log or there are failed/aborted tests in the logs"
            EXIT_STATUS=1
        else
            echo "Execution finished and spread results included in log without failed/aborted tests"
            EXIT_STATUS=0
        fi
    # For beta, candidate or stable, a successful run is when the execution finished without aborted tests
    # This is because there are known issues which fail and logs require manual review. In case of all tests
    # passed, the the jira card is automatically set as passed for that run.
    else
        if ! grep -e "Aborted tasks: 0" "$SPREAD_LOG"; then
            echo "Execution finished and either not spread results included in log or there are aborted tests in the log"
            EXIT_STATUS=1
        else
            echo "Execution finished and spread results included in log without aborted tests"
            EXIT_STATUS=0
        fi
    fi
else
    echo "Execution didn't finish and/or no tests passing in spread log"
    EXIT_STATUS=1
fi

echo "Geting version and revision for either snap or image under test"
if [ -n "$SNAP_UT" ]; then
    OBJECT_UT="$SNAP_UT"
    VERSION_UT="$($PROJECT_DIR/scripts/snap-version.sh $SNAP_UT $CHANNEL amd64)"
    REVISION_UT="$($PROJECT_DIR/scripts/snap-revision.sh $SNAP_UT $CHANNEL amd64)"
elif [ -n "$IMAGE_UT" ]; then
    OBJECT_UT="$IMAGE_UT"
    VERSION_UT="$CHANNEL"
    REVISION_UT="($(date +%Y%m%d))"
else
    echo "Neither snap nor image under test found, exiting"
    EXIT_STATUS=1
fi

echo "Integrating results with jira board"
if [ -n "$JIRA_ACCESS_TOKEN" ] && [ -n "$JIRA_ACCESS_TOKEN_SECRET" ] && [ -n "$JIRA_KEY_CERT" ]; then
    "$CURR_DIR"/tools/jira-integrator "$OBJECT_UT" "$VERSION_UT" "$REVISION_UT" "$CHANNEL" "$JIRA_CONFIG" "$BOARD_UT" "$ARCH_UT" "$SPREAD_LOG" "$SUMMARY_LOG" "$ATTACH_LOG"
else
    echo "Skipping jira integration, variables needed in the environment: JIRA_ACCESS_TOKEN, JIRA_ACCESS_TOKEN_SECRET and JIRA_KEY_CERT"
fi

echo "Finishing"
exit "$EXIT_STATUS"
